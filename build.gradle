plugins {
	id 'java'
	id 'org.springframework.boot' version "$springBootVersion"
	id 'io.spring.dependency-management' version "$springDependencyManagementVersion"
}

group = 'com.cycnet'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = "$javaVersion"
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:$springDocOpenApiVersion"

	implementation "io.minio:minio:$minioVersion"

	implementation "org.flywaydb:flyway-core:$flywayDbVersion"
	runtimeOnly "org.postgresql:postgresql:$postgreSqlVersion"

	compileOnly "org.projectlombok:lombok:$projectLombokVersion"
	annotationProcessor "org.projectlombok:lombok:$projectLombokVersion"

	implementation "org.mapstruct:mapstruct:$mapStructVersion"
	annotationProcessor "org.mapstruct:mapstruct-processor:$mapStructVersion"

	implementation "io.jsonwebtoken:jjwt-api:$jsonWebTokenVersion"
	runtimeOnly "io.jsonwebtoken:jjwt-impl:$jsonWebTokenVersion"
	runtimeOnly "io.jsonwebtoken:jjwt-jackson:$jsonWebTokenVersion"

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:postgresql'

	// Does not work without specifying the version
	testImplementation "org.testcontainers:minio:$testcontainersVersion"
}

tasks.named('test') {
	useJUnitPlatform()
}

bootBuildImage {
	imageName = 'akzamus/ctf-platform:dev'
}
